---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import createSlug from "../../lib/createSlug"

export async function getStaticPaths({ paginate }) {
  const posts = await getCollection("blog");
  posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
  return paginate(posts, { pageSize: 10 });
}

const { page } = Astro.props;

// Badge 색상 얻기 함수
function getBadgeColor(post) {
  if (post.data.color) {
    // MD 파일에서 직접 지정한 색상 사용
    return post.data.color;
  }
  // 기본값
  return 'bg-gray-100 text-gray-800';
}
---

<BaseLayout title="Posts" sideBarActiveItemID="blog">
  <div class="max-w-7xl mx-auto px-8 py-8">
    
    <h1 class="text-sm font-bold mb-3">Posts</h1>
    
    {
      page.data.length === 0 ? (
        <div class="py-6 border-b border-gray-200 bg-yellow-50">
          <p class="font-semibold text-yellow-800 mb-2">No Posts Yet</p>
          <p class="text-yellow-700">There are no blog posts to show at the moment. Check back later!</p>
        </div>
      ) : (
        <div class="space-y-4">
          {page.data.map((post) => (
            <article class="py-3 border-b border-gray-200">
              <h2 class="text-sm font-semibold mb-1">
                <a 
                  href={"/blog/" + createSlug(post.data.title, post.slug)}
                  class="text-gray-700 hover:text-gray-900"
                >
                  {post.data.title}
                </a>
              </h2>
              
              <div class="flex items-center gap-4 mb-1 text-sm text-gray-600">
                <time>
                  {post.data.pubDate.toLocaleDateString('en-US', { 
                    year: 'numeric', 
                    month: 'short', 
                    day: 'numeric' 
                  })}
                </time>
                {post.data.badge && (
                  <span class={`px-2 py-1 rounded-full text-xs font-medium ${getBadgeColor(post)}`}>
                    {post.data.badge}
                  </span>
                )}
              </div>
              
              <p class="text-sm text-gray-600 mb-1 leading-relaxed">
                {post.data.description}
              </p>
              
              {post.data.tags && post.data.tags.length > 0 && (
                <div class="flex flex-wrap gap-3">
                  {post.data.tags.map((tag) => (
                    <span class="text-sm text-gray-400">
                      #{tag}
                    </span>
                  ))}
                </div>
              )}
            </article>
          ))}
        </div>
      )
    }

    <!-- Pagination -->
    {(page.url.prev || page.url.next) && (
      <div class="flex justify-between items-center mt-12 pt-8 border-t border-gray-200">
        {
          page.url.prev ? (
            <a 
              href={page.url.prev} 
              class="flex items-center text-gray-700 hover:text-gray-900 text-sm"
            >
              <svg
                class="h-4 w-4 mr-2"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="currentColor"
              >
                <path d="M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z" />
              </svg>
              Recent posts
            </a>
          ) : (
            <div></div>
          )
        }
        {
          page.url.next ? (
            <a 
              href={page.url.next} 
              class="flex items-center text-gray-700 hover:text-gray-900 text-sm"
            >
              Older Posts
              <svg
                class="h-4 w-4 ml-2"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="currentColor"
              >
                <path d="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z" />
              </svg>
            </a>
          ) : (
            <div></div>
          )
        }
      </div>
    )}
  </div>
</BaseLayout>

<style>
  a {
    color: #374151;
    text-decoration: none;
  }
  
  a:hover {
    text-decoration: underline;
    color: #111827;
  }
</style>
