---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import createSlug from "../../lib/createSlug"

export async function getStaticPaths({ paginate }) {
  const posts = (await getCollection("blog"))
    .filter(post => !post.data.draft);
  posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
  return paginate(posts, { pageSize: 10 });
}

const { page } = Astro.props;

// Badge 색상 얻기 함수
function getBadgeColor(post) {
  if (post.data.color) {
    // color 값에서 텍스트 색상만 추출
    const match = post.data.color.match(/text-(\S+)/);
    return match ? match[1] : 'gray-500';
  }
  return 'gray-500';
}

// 모든 카테고리(badge) 추출
const allBadges = [...new Set(page.data.map(post => post.data.badge).filter(Boolean))].sort();
---

<BaseLayout title="Posts" sideBarActiveItemID="blog">
  <div class="max-w-7xl mx-auto px-8 py-8">
    
    <h1 class="text-sm font-bold mb-6">Posts</h1>
    
    <!-- Category Filter Badges -->
    {allBadges.length > 0 && (
      <div class="mb-6">
        <div class="flex flex-wrap gap-2">
          <button 
            class="category-filter-btn active text-xs px-2 py-0.5 transition-colors cursor-pointer"
            data-category="all"
          >
            All
          </button>
          {allBadges.map((badge) => (
            <button 
              class="category-filter-btn text-xs px-2 py-0.5 transition-colors cursor-pointer"
              data-category={badge}
              data-badge-name={badge}
            >
              {badge}
            </button>
          ))}
        </div>
      </div>
    )}
    
    {
      page.data.length === 0 ? (
        <div class="py-6 border-b border-gray-200 bg-yellow-50">
          <p class="font-semibold text-yellow-800 mb-2">No Posts Yet</p>
          <p class="text-yellow-700">There are no blog posts to show at the moment. Check back later!</p>
        </div>
      ) : (
        <div class="space-y-4" id="posts-container">
          {page.data.map((post) => (
            <article 
              class="post-item py-3 border-b border-gray-200" 
              data-category={post.data.badge || 'uncategorized'}
            >
              <h2 class="text-sm font-semibold mb-1">
                <a 
                  href={"/blog/" + createSlug(post.data.title, post.slug)}
                  class="text-gray-700 hover:text-gray-900"
                >
                  {post.data.title}
                </a>
              </h2>
              
              <div class="flex items-center gap-4 mb-1 text-sm text-gray-600">
                <time>
                  {post.data.pubDate.toLocaleDateString('en-US', { 
                    year: 'numeric', 
                    month: 'short', 
                    day: 'numeric' 
                  })}
                </time>
                {post.data.badge && (
                  <span class={`text-xs text-${getBadgeColor(post)}`}>
                    {post.data.badge}
                  </span>
                )}
              </div>
              
              <p class="text-sm text-gray-600 mb-2 leading-relaxed">
                {post.data.description}
              </p>
              
              {post.data.tags && post.data.tags.length > 0 && (
                <div class="flex flex-wrap gap-3">
                  {post.data.tags.map((tag) => (
                    <span class="text-xs text-gray-500">
                      #{tag}
                    </span>
                  ))}
                </div>
              )}
            </article>
          ))}
        </div>
      )
    }

    <!-- No results message (hidden by default) -->
    <div id="no-results" class="hidden py-6 border-b border-gray-200">
      <p class="text-sm text-gray-600">해당 카테고리의 게시글이 없습니다.</p>
    </div>

    <!-- Pagination -->
    {(page.url.prev || page.url.next) && (
      <div class="flex justify-between items-center mt-12 pt-8 border-t border-gray-200">
        {
          page.url.prev ? (
            <a 
              href={page.url.prev} 
              class="flex items-center text-gray-700 hover:text-gray-900 text-sm"
            >
              <svg
                class="h-4 w-4 mr-2"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="currentColor"
              >
                <path d="M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z" />
              </svg>
              Recent posts
            </a>
          ) : (
            <div></div>
          )
        }
        {
          page.url.next ? (
            <a 
              href={page.url.next} 
              class="flex items-center text-gray-700 hover:text-gray-900 text-sm"
            >
              Older Posts
              <svg
                class="h-4 w-4 ml-2"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="currentColor"
              >
                <path d="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z" />
              </svg>
            </a>
          ) : (
            <div></div>
          )
        }
      </div>
    )}
  </div>
</BaseLayout>

<style>
  a {
    color: #374151;
    text-decoration: none;
  }
  
  a:hover {
    text-decoration: underline;
    color: #111827;
  }

  /* Category filter button styles */
  .category-filter-btn {
    background-color: #f3f4f6;
    color: #111827;
    border: none;
  }

  .category-filter-btn:hover {
    opacity: 0.8;
  }

  .category-filter-btn.active {
    background-color: #d1d5db;
    color: #111827;
  }

  /* Category specific colors - Pastel tones */
  .category-filter-btn[data-badge-name="게임 플레이 공유"] {
    background-color: #bae6fd;
    color: #0c4a6e;
  }

  .category-filter-btn[data-badge-name="게임 플레이 공유"].active {
    background-color: #7dd3fc;
    color: #0c4a6e;
  }

  .category-filter-btn[data-badge-name="아이디어"] {
    background-color: #a7f3d0;
    color: #064e3b;
  }

  .category-filter-btn[data-badge-name="아이디어"].active {
    background-color: #6ee7b7;
    color: #064e3b;
  }

  .category-filter-btn[data-badge-name="통계 분석 기법"] {
    background-color: #fecaca;
    color: #7f1d1d;
  }

  .category-filter-btn[data-badge-name="통계 분석 기법"].active {
    background-color: #fca5a5;
    color: #7f1d1d;
  }

  /* Fade animation for filtered posts */
  .post-item {
    opacity: 1;
    transition: opacity 0.2s ease-in-out;
  }

  .post-item.hidden {
    display: none;
  }
</style>

<script>
  function initCategoryFilter() {
    const filterButtons = document.querySelectorAll('.category-filter-btn');
    const postItems = document.querySelectorAll('.post-item');
    const noResults = document.getElementById('no-results');
    
    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        const selectedCategory = button.getAttribute('data-category');
        
        // Update active button
        filterButtons.forEach(btn => btn.classList.remove('active'));
        button.classList.add('active');
        
        // Filter posts
        let visibleCount = 0;
        postItems.forEach(post => {
          const postCategory = post.getAttribute('data-category');
          
          if (selectedCategory === 'all' || postCategory === selectedCategory) {
            post.classList.remove('hidden');
            visibleCount++;
          } else {
            post.classList.add('hidden');
          }
        });
        
        // Show/hide no results message
        if (visibleCount === 0) {
          noResults?.classList.remove('hidden');
        } else {
          noResults?.classList.add('hidden');
        }
      });
    });
  }

  // Initialize on page load
  document.addEventListener('DOMContentLoaded', initCategoryFilter);
  
  // Re-initialize after Astro view transitions
  document.addEventListener('astro:page-load', initCategoryFilter);
</script>
